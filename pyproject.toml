[project]
name = "huntwords"
version = "0.1.0"
description = "Huntwords - hunt for words in a grid of letters"
authors = [{ name = "Kevin McWhirter", email = "klmcw@yahoo.com" }]
dependencies = [
    "docopt>=0.6.2",
    "fastapi>=0.110.1",
    "jmespath>=1.0.1",
    "redis>=5.0.3",
    "requests>=2.31.0",
    "uvicorn[standard]>=0.29.0",
]
requires-python = ">=3.13"
readme = "README.md"
license = { text = "MIT" }


[tool.pdm]
distribution = false

[tool.pdm.scripts]
create.shell = "pdm sync --dev"
clean.shell = "find . -type d -name __pycache__ -exec rm -fr {} \\;;for d in ${TO_DEL};do echo $d;rm -fr $d;done"
clean.env = { TO_DEL = "build .coverage coverage.xml log .mypy_cache .pdm-build __pycache__ .pytest_cache src/qwirkle.egg-info .tox dist src/build" }
clean.help = "Clean build artifacts"
envclean.shell = "for d in ${TO_DEL};do echo $d;rm -fr $d;done"
envclean.env = { TO_DEL = "ui/node_modules .venv" }
envclean.help = "Clean environment"
allclean.composite = [ "clean", "envclean" ]
start = "python -m huntwordsapi"
build.shell = "./etc/wrap_for_compose.sh docker compose build"
compose.shell = "docker compose up"
up.composite = [ "build", "compose" ]
down.shell = "docker compose down"
manage = "python -m manager"
refresh = "./etc/refresh_puzzleboards.sh"

[dependency-groups]
dev = [
    "autopep8>=2.1.0",
    "flake8>=7.1.1",
    "mypy>=1.14.1",
    "pytest>=8.1.1",
    "pytest-cov>=5.0.0",
]
